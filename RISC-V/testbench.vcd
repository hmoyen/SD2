$date
	Tue Jun 13 22:12:40 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var reg 1 ! clock_tb $end
$var reg 1 " rst_n_tb $end
$scope module riscv $end
$var wire 1 ! clk $end
$var wire 64 # d_mem_data [63:0] $end
$var wire 1 " rst_n $end
$var wire 32 $ i_mem_data [31:0] $end
$var wire 6 % i_mem_addr [5:0] $end
$var wire 1 & d_mem_we $end
$var wire 6 ' d_mem_addr [5:0] $end
$scope module mem $end
$var wire 64 ( d_mem_data [63:0] $end
$var wire 64 ) data_in [63:0] $end
$var wire 32 * i_mem_data [31:0] $end
$var wire 6 + i_mem_addr [5:0] $end
$var wire 64 , data_out [63:0] $end
$var wire 1 & d_mem_we $end
$var wire 6 - d_mem_addr [5:0] $end
$scope module d_mem $end
$var wire 64 . din [63:0] $end
$var wire 64 / dout [63:0] $end
$var wire 1 & we $end
$var wire 6 0 ads [5:0] $end
$upscope $end
$scope module i_mem $end
$var wire 32 1 dout [31:0] $end
$var wire 3 2 funct3 [2:0] $end
$var wire 1 3 funct7 $end
$var wire 7 4 opcode [6:0] $end
$var wire 5 5 rd [4:0] $end
$var wire 5 6 rs1 [4:0] $end
$var wire 5 7 rs2 [4:0] $end
$var wire 6 8 ads [5:0] $end
$upscope $end
$upscope $end
$scope module prv $end
$var wire 1 ! clk $end
$var wire 64 9 d_mem_data [63:0] $end
$var wire 32 : i_mem_data [31:0] $end
$var wire 1 " rst_n $end
$var wire 1 ; rf_we $end
$var wire 1 < rf_src $end
$var wire 1 = pc_src $end
$var wire 7 > opcode [6:0] $end
$var wire 6 ? i_mem_addr [5:0] $end
$var wire 1 & d_mem_we $end
$var wire 6 @ d_mem_addr [5:0] $end
$var wire 1 A alu_src $end
$var wire 4 B alu_flags [3:0] $end
$var wire 4 C alu_cmd [3:0] $end
$scope module fd_inst $end
$var wire 1 ! clk $end
$var wire 64 D d_mem_data [63:0] $end
$var wire 32 E i_mem_data [31:0] $end
$var wire 1 " rst_n $end
$var wire 32 F somaimm [31:0] $end
$var wire 32 G somafour [31:0] $end
$var wire 1 H sinalMux3 $end
$var wire 1 ; rf_we $end
$var wire 1 < rf_src $end
$var wire 64 I res [63:0] $end
$var wire 1 = pc_src $end
$var wire 7 J opcode [6:0] $end
$var wire 64 K imm [63:0] $end
$var wire 6 L i_mem_addr [5:0] $end
$var wire 1 M funct7 $end
$var wire 3 N funct3 [2:0] $end
$var wire 32 O doutIR [31:0] $end
$var wire 64 P doutB [63:0] $end
$var wire 64 Q doutA [63:0] $end
$var wire 1 & d_mem_we $end
$var wire 6 R d_mem_addr [5:0] $end
$var wire 1 S clock $end
$var wire 1 A alu_src $end
$var wire 4 T alu_flags [3:0] $end
$var wire 4 U alu_control [3:0] $end
$var wire 4 V alu_cmd [3:0] $end
$var wire 32 W S3 [31:0] $end
$var wire 64 X S2 [63:0] $end
$var wire 64 Y S1 [63:0] $end
$var wire 5 Z Rw [4:0] $end
$var wire 5 [ Rb [4:0] $end
$var wire 5 \ Ra [4:0] $end
$var wire 32 ] PC [31:0] $end
$var reg 3 ^ contador_clock [2:0] $end
$scope module crtl $end
$var wire 1 M funct7 $end
$var wire 3 _ funct3 [2:0] $end
$var wire 4 ` control [3:0] $end
$var wire 4 a alu_cmd [3:0] $end
$upscope $end
$scope module gate $end
$var wire 1 H sinalMux3 $end
$var wire 1 = pc_src $end
$var wire 4 b alu_flags [3:0] $end
$upscope $end
$scope module hii $end
$var wire 32 c palavra [31:0] $end
$var wire 7 d opcode [6:0] $end
$var wire 20 e imm_field_typeB [19:0] $end
$var wire 12 f imm_field_typeA [11:0] $end
$var wire 64 g imm [63:0] $end
$upscope $end
$scope module huu $end
$var wire 1 ! clock $end
$var wire 32 h data_in [31:0] $end
$var wire 5 i rs2 [4:0] $end
$var wire 5 j rs1 [4:0] $end
$var wire 5 k rd [4:0] $end
$var wire 7 l opcode [6:0] $end
$var wire 1 M funct7 $end
$var wire 3 m funct3 [2:0] $end
$var reg 32 n data_out [31:0] $end
$upscope $end
$scope module ihs $end
$var wire 1 H sinalMux3 $end
$var wire 32 o imm_some [31:0] $end
$var wire 32 p four_some [31:0] $end
$var wire 32 q S3 [31:0] $end
$upscope $end
$scope module its $end
$var wire 64 r imm [63:0] $end
$var wire 32 s soma [31:0] $end
$var wire 32 t PC [31:0] $end
$upscope $end
$scope module itt $end
$var wire 32 u soma [31:0] $end
$var wire 32 v dout_pc [31:0] $end
$upscope $end
$scope module uhh $end
$var wire 1 S clock $end
$var wire 32 w data_in [31:0] $end
$var wire 1 " rst_n $end
$var reg 32 x data_out [31:0] $end
$upscope $end
$scope module utt $end
$var wire 5 y Ra [4:0] $end
$var wire 5 z Rb [4:0] $end
$var wire 5 { Rw [4:0] $end
$var wire 1 ! clk $end
$var wire 64 | doutA [63:0] $end
$var wire 64 } doutB [63:0] $end
$var wire 1 ; we $end
$var wire 64 ~ din [63:0] $end
$upscope $end
$scope module utv $end
$var wire 64 !" doutB [63:0] $end
$var wire 64 "" imm [63:0] $end
$var wire 1 A sinalMux $end
$var wire 64 #" S1 [63:0] $end
$upscope $end
$scope module uut $end
$var wire 64 $" a [63:0] $end
$var wire 64 %" b [63:0] $end
$var wire 4 &" sinal [3:0] $end
$var wire 1 '" zero $end
$var wire 1 (" soma_ $end
$var wire 64 )" soma [63:0] $end
$var wire 1 *" overflow $end
$var wire 4 +" alu_flags [3:0] $end
$var wire 1 ," MSB $end
$upscope $end
$scope module uvv $end
$var wire 64 -" doutMem [63:0] $end
$var wire 64 ." soma [63:0] $end
$var wire 1 < rf_src $end
$var wire 64 /" S2 [63:0] $end
$upscope $end
$upscope $end
$scope module uc_inst $end
$var wire 4 0" alu_flags [3:0] $end
$var wire 1 ! clk $end
$var wire 7 1" opcode [6:0] $end
$var wire 1 " rst_n $end
$var wire 4 2" state_reg [3:0] $end
$var wire 1 ; rf_we $end
$var wire 1 < rf_src $end
$var wire 1 = pc_src $end
$var wire 1 & d_mem_we $end
$var wire 1 A alu_src $end
$var wire 4 3" alu_cmd [3:0] $end
$scope module sm $end
$var wire 1 ! clk $end
$var wire 1 4" reset $end
$var reg 4 5" state_next [3:0] $end
$var reg 4 6" state_reg [3:0] $end
$upscope $end
$scope module uc $end
$var wire 4 7" alu_flags [3:0] $end
$var wire 1 ! clk $end
$var wire 7 8" opcode [6:0] $end
$var wire 4 9" state_reg [3:0] $end
$var wire 1 ; weReg $end
$var wire 1 & weMem $end
$var wire 4 :" alu_cmd [3:0] $end
$var wire 1 = Mux3 $end
$var wire 1 < Mux2 $end
$var wire 1 A Mux1 $end
$var reg 9 ;" control_UC [8:0] $end
$var reg 7 <" reg_opcode [6:0] $end
$var reg 1 =" weIR $end
$var reg 1 >" wePc $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x>"
x="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx0 7"
bx 6"
bx 5"
14"
bx 3"
bx 2"
bx 1"
bx0 0"
bx /"
bx ."
bx -"
x,"
bx0 +"
x*"
bx )"
x("
x'"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
b0 x
bx w
b0 v
b100 u
b0 t
bx s
bx r
bx q
b100 p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
b100010000001001100011 h
bx g
bx f
bx e
bx d
bx c
bx0 b
bx a
bx `
bx _
b0 ^
b0 ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx0 T
0S
bx R
bx Q
bx P
bx O
bx N
xM
b0 L
bx K
bx J
bx I
xH
b100 G
bx F
b100010000001001100011 E
bx D
bx C
bx0 B
xA
bx @
b0 ?
bx >
x=
x<
x;
b100010000001001100011 :
bx 9
b0 8
bz 7
bz 6
bz 5
bz 4
z3
bz 2
b100010000001001100011 1
bx 0
bx /
bx .
bx -
bx ,
b0 +
b100010000001001100011 *
bx )
bx (
bx '
x&
b0 %
b100010000001001100011 $
bx #
0"
0!
$end
#10
b0xx00 W
b0xx00 q
b0xx00 w
b1000 F
b1000 o
b1000 s
b10 f
b100010000 e
b0x00x Y
b0x00x #"
b0x00x %"
b1000 K
b1000 g
b1000 r
b1000 ""
b100 Z
b100 k
b100 {
b1 Q
b1 |
b1 $"
b10 \
b10 j
b10 y
b1 P
b1 }
b1 !"
b1 [
b1 i
b1 z
b1100011 >
b1100011 J
b1100011 d
b1100011 l
b1100011 1"
b1100011 8"
0M
b0 N
b0 _
b0 m
b0 2"
b0 6"
b0 9"
b100010000001001100011 O
b100010000001001100011 c
b100010000001001100011 n
b1 ^
1!
#20
04"
0!
1"
#30
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#40
0!
#50
b1100011 <"
b10 2"
b10 6"
b10 9"
b10 5"
b11 ^
1!
#60
0!
#70
b1000 W
b1000 q
b1000 w
1H
b0x0xx0x X
b0x0xx0x ~
b0x0xx0x /"
1'"
b101101 )
b101101 .
b101101 #
b101101 (
b101101 9
b101101 D
b101101 -"
b101101 ,
b101101 /
b110 U
b110 `
b110 &"
0,"
b0 '
b0 -
b0 0
b0 @
b0 R
b0 I
b0 )"
b0 ."
0("
b1010 B
b1010 T
b1010 b
b1010 +"
b1010 0"
b1010 7"
1*"
b1 Y
b1 #"
b1 %"
0;
0&
0A
b11 C
b11 V
b11 a
b11 3"
b11 :"
1=
b0x000111 ;"
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#80
0!
#90
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#100
0!
#110
b10000 W
b10000 q
b10000 w
b1100 G
b1100 p
b1100 u
b10000 F
b10000 o
b10000 s
b1100011010001110000011 $
b1100011010001110000011 *
b1100011010001110000011 1
b1100011010001110000011 :
b1100011010001110000011 E
b1100011010001110000011 h
b10 %
b10 +
b10 8
b10 ?
b10 L
b10 ]
b10 t
b10 v
b10 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#120
0!
#130
b11 <"
b1011 W
b1011 q
b1011 w
b1000 B
b1000 T
b1000 b
b1000 +"
b1000 0"
b1000 7"
0*"
b1011 F
b1011 o
b1011 s
b1100011010 e
b0 Y
b0 #"
b0 %"
b11 K
b11 g
b11 r
b11 ""
b11 f
b111 Z
b111 k
b111 {
b0 Q
b0 |
b0 $"
b11 \
b11 j
b11 y
b0 P
b0 }
b0 !"
b11 [
b11 i
b11 z
b11 >
b11 J
b11 d
b11 l
b11 1"
b11 8"
b10 N
b10 _
b10 m
b10 2"
b10 6"
b10 9"
b1100011010001110000011 O
b1100011010001110000011 c
b1100011010001110000011 n
b10 5"
b11 ^
1!
#140
0!
#150
0'"
b1110 )
b1110 .
b1110 #
b1110 (
b1110 9
b1110 D
b1110 -"
b1110 ,
b1110 /
b11 '
b11 -
b11 0
b11 @
b11 R
b11 I
b11 )"
b11 ."
b10 U
b10 `
b10 &"
1("
b10 B
b10 T
b10 b
b10 +"
b10 0"
b10 7"
1*"
b1100 W
b1100 q
b1100 w
b11 Y
b11 #"
b11 %"
b1110 X
b1110 ~
b1110 /"
0H
1;
1<
1A
b1 C
b1 V
b1 a
b1 3"
b1 :"
0=
b101100010 ;"
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#160
0!
#170
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#180
0!
#190
b10000 W
b10000 q
b10000 w
b10000 G
b10000 p
b10000 u
b1111 F
b1111 o
b1111 s
b11111110100000111010111110100011 $
b11111110100000111010111110100011 *
b11111110100000111010111110100011 1
b11111110100000111010111110100011 :
b11111110100000111010111110100011 E
b11111110100000111010111110100011 h
b11 %
b11 +
b11 8
b11 ?
b11 L
b11 ]
b11 t
b11 v
b11 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#200
0!
#210
b100011 <"
b1011 F
b1011 o
b1011 s
b1111111111111111111111111111111111111111111111111111111111111111 Y
b1111111111111111111111111111111111111111111111111111111111111111 #"
b1111111111111111111111111111111111111111111111111111111111111111 %"
b1111111111111111111111111111111111111111111111111111111111111111 K
b1111111111111111111111111111111111111111111111111111111111111111 g
b1111111111111111111111111111111111111111111111111111111111111111 r
b1111111111111111111111111111111111111111111111111111111111111111 ""
b0 X
b0 ~
b0 /"
b0 )
b0 .
b0 #
b0 (
b0 9
b0 D
b0 -"
b0 B
b0 T
b0 b
b0 +"
b0 0"
b0 7"
0*"
b0 ,
b0 /
b1101 '
b1101 -
b1101 0
b1101 @
b1101 R
b111111111111 f
b11111110100000111010 e
b1101 I
b1101 )"
b1101 ."
b11111 Z
b11111 k
b11111 {
b1110 Q
b1110 |
b1110 $"
b111 \
b111 j
b111 y
b111110 P
b111110 }
b111110 !"
b1000 [
b1000 i
b1000 z
b100011 >
b100011 J
b100011 d
b100011 l
b100011 1"
b100011 8"
1M
b10 2"
b10 6"
b10 9"
b11111110100000111010111110100011 O
b11111110100000111010111110100011 c
b11111110100000111010111110100011 n
b10 5"
b11 ^
1!
#220
0!
#230
b0 B
b0 T
b0 b
b0 +"
b0 0"
b0 7"
0,"
b111110 ,
b111110 /
b1101 '
b1101 -
b1101 0
b1101 @
b1101 R
b1101 I
b1101 )"
b1101 ."
b10 U
b10 `
b10 &"
b111110 X
b111110 ~
b111110 /"
b111110 )
b111110 .
b111110 #
b111110 (
b111110 9
b111110 D
b111110 -"
0;
1&
b10 C
b10 V
b10 a
b10 3"
b10 :"
b11100100 ;"
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#240
0!
#250
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#260
0!
#270
b10100 W
b10100 q
b10100 w
b10100 G
b10100 p
b10100 u
b1111 F
b1111 o
b1111 s
b100000001000010010110011 $
b100000001000010010110011 *
b100000001000010010110011 1
b100000001000010010110011 :
b100000001000010010110011 E
b100000001000010010110011 h
b100 %
b100 +
b100 8
b100 ?
b100 L
b100 ]
b100 t
b100 v
b100 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#280
0!
#290
b110011 <"
0,"
b11000 F
b11000 o
b11000 s
b1000 Y
b1000 #"
b1000 %"
b1000 K
b1000 g
b1000 r
b1000 ""
b0 B
b0 T
b0 b
b0 +"
b0 0"
b0 7"
0'"
1("
b111110 ,
b111110 /
b1001 '
b1001 -
b1001 0
b1001 @
b1001 R
b100000001000 e
b1000 f
b1001 I
b1001 )"
b1001 ."
b1001 Z
b1001 k
b1001 {
b1 Q
b1 |
b1 $"
b1 \
b1 j
b1 y
b110011 >
b110011 J
b110011 d
b110011 l
b110011 1"
b110011 8"
0M
b0 N
b0 _
b0 m
b10 2"
b10 6"
b10 9"
b100000001000010010110011 O
b100000001000010010110011 c
b100000001000010010110011 n
b10 5"
b11 ^
1!
#300
0!
#310
bx )
bx .
bx #
bx (
bx 9
bx D
bx -"
b10 B
b10 T
b10 b
b10 +"
b10 0"
b10 7"
1*"
bx ,
bx /
b111111 '
b111111 -
b111111 0
b111111 @
b111111 R
b111111 I
b111111 )"
b111111 ."
b111110 Y
b111110 #"
b111110 %"
b111111 X
b111111 ~
b111111 /"
1;
0&
0<
0A
b0 C
b0 V
b0 a
b0 3"
b0 :"
b100000000 ;"
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#320
0!
#330
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#340
0!
#350
b11000 W
b11000 q
b11000 w
b11000 G
b11000 p
b11000 u
b11100 F
b11100 o
b11100 s
b1000000000101000000010100110011 $
b1000000000101000000010100110011 *
b1000000000101000000010100110011 1
b1000000000101000000010100110011 :
b1000000000101000000010100110011 E
b1000000000101000000010100110011 h
b101 %
b101 +
b101 8
b101 ?
b101 L
b101 ]
b101 t
b101 v
b101 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#360
0!
#370
b10000010101 F
b10000010101 o
b10000010101 s
b10000000001 K
b10000000001 g
b10000000001 r
b10000000001 ""
b10 B
b10 T
b10 b
b10 +"
b10 0"
b10 7"
0'"
b111101 X
b111101 ~
b111101 /"
b111101 '
b111101 -
b111101 0
b111101 @
b111101 R
b10000000001 f
b111101 I
b111101 )"
b111101 ."
b110 U
b110 `
b110 &"
b1000000000101000000 e
b1 Y
b1 #"
b1 %"
b1010 Z
b1010 k
b1010 {
b111110 Q
b111110 |
b111110 $"
b1000 \
b1000 j
b1000 y
b1 P
b1 }
b1 !"
b1 [
b1 i
b1 z
1M
b10 2"
b10 6"
b10 9"
b1000000000101000000010100110011 O
b1000000000101000000010100110011 c
b1000000000101000000010100110011 n
b10 5"
b11 ^
1!
#380
0!
#390
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#400
0!
#410
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#420
0!
#430
b11100 W
b11100 q
b11100 w
b11100 G
b11100 p
b11100 u
b10000011001 F
b10000011001 o
b10000011001 s
b100010111011000110011 $
b100010111011000110011 *
b100010111011000110011 1
b100010111011000110011 :
b100010111011000110011 E
b100010111011000110011 h
b110 %
b110 +
b110 8
b110 ?
b110 L
b110 ]
b110 t
b110 v
b110 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#440
0!
#450
b11001 F
b11001 o
b11001 s
b1011 )
b1011 .
b1011 #
b1011 (
b1011 9
b1011 D
b1011 -"
b1 K
b1 g
b1 r
b1 ""
b1011 ,
b1011 /
b10 B
b10 T
b10 b
b10 +"
b10 0"
b10 7"
0'"
b1 X
b1 ~
b1 /"
b1 '
b1 -
b1 0
b1 @
b1 R
b1 I
b1 )"
b1 ."
b1 f
b0 U
b0 `
b0 &"
0("
b100010111 e
b1100 Z
b1100 k
b1100 {
b1 Q
b1 |
b1 $"
b10 \
b10 j
b10 y
0M
b111 N
b111 _
b111 m
b10 2"
b10 6"
b10 9"
b100010111011000110011 O
b100010111011000110011 c
b100010111011000110011 n
b10 5"
b11 ^
1!
#460
0!
#470
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#480
0!
#490
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#500
0!
#510
b100000 W
b100000 q
b100000 w
b100000 G
b100000 p
b100000 u
b11101 F
b11101 o
b11101 s
b100011110011010110011 $
b100011110011010110011 *
b100011110011010110011 1
b100011110011010110011 :
b100011110011010110011 E
b100011110011010110011 h
b111 %
b111 +
b111 8
b111 ?
b111 L
b111 ]
b111 t
b111 v
b111 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#520
0!
#530
0,"
0'"
b1011 )
b1011 .
b1011 #
b1011 (
b1011 9
b1011 D
b1011 -"
b1 X
b1 ~
b1 /"
b1011 ,
b1011 /
b1 '
b1 -
b1 0
b1 @
b1 R
b1 U
b1 `
b1 &"
b1 I
b1 )"
b1 ."
1("
b0 B
b0 T
b0 b
b0 +"
b0 0"
b0 7"
0*"
b100011110 e
b1101 Z
b1101 k
b1101 {
b0 Q
b0 |
b0 $"
b11 \
b11 j
b11 y
b110 N
b110 _
b110 m
b10 2"
b10 6"
b10 9"
b100011110011010110011 O
b100011110011010110011 c
b100011110011010110011 n
b10 5"
b11 ^
1!
#540
0!
#550
0S
b11 2"
b11 6"
b11 9"
b0 ^
b11 5"
1!
#560
0!
#570
b100 2"
b100 6"
b100 9"
b100 5"
b1 ^
1!
#580
0!
#590
b100100 W
b100100 q
b100100 w
b100100 G
b100100 p
b100100 u
b100001 F
b100001 o
b100001 s
bx $
bx *
bx 1
bx :
bx E
bx h
b1000 %
b1000 +
b1000 8
b1000 ?
b1000 L
b1000 ]
b1000 t
b1000 v
b1000 x
b1 2"
b1 6"
b1 9"
1S
b10 ^
b1 5"
1!
#600
0!
#610
bx <"
x'"
bx )
bx .
bx #
bx (
bx 9
bx D
bx -"
x,"
bx X
bx ~
bx /"
bx ,
bx /
bx '
bx -
bx 0
bx @
bx R
bx I
bx )"
bx ."
x("
bx0 B
bx0 T
bx0 b
bx0 +"
bx0 0"
bx0 7"
x*"
bx F
bx o
bx s
bx U
bx `
bx &"
bx Y
bx #"
bx %"
bx K
bx g
bx r
bx ""
bx e
bx f
bx Z
bx k
bx {
bx Q
bx |
bx $"
bx \
bx j
bx y
bx P
bx }
bx !"
bx [
bx i
bx z
bx >
bx J
bx d
bx l
bx 1"
bx 8"
xM
bx N
bx _
bx m
b10 2"
b10 6"
b10 9"
bx O
bx c
bx n
b10 5"
b11 ^
1!
#620
0!
